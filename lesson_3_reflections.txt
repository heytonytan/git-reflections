When would you want to use a remote repository rather than keeping all your work local?

When I am collaborating with people, or want to share my code with people around the world.

Why might you want to always pull changes manually rather than having Git automatically stay
up-to-date with your remote repository?

This is because I would want to code based on that particular commmit, and even if the remote
repository has changes, I would want to commit to the version I had initially pulled.

Describe the differences between forks, clones, and branches.
When would you use one instead of another?

Forks clone git repos within the server. Clones copy git repos from the server to a local repo.
Branches create alternative paths of commits. I would use fork when obtaining a copy of
someone else's code, I would clone when pulling one of my repositories from the server down
to a local copy.

What is the benefit of having a copy of the last known state of the remote stored locally?

You can bring it to be merged with other local commits.

How would you collaborate without using Git or GitHub? What would be easier, and what would be
harder?

You would have to compare between files and manually add in the changes. It would be a less
technical process, but there would be a lot of mess ups, especially when the work flow gets
complicated.

When would you want to make changes in a separate branch rather than directly in master?
What benefits does each approach have?

I would want to make changes in a separate branch rather than directly in master, when I
want to work on a feature seperate from the master branch (production code). Making changes
directly in master has the benefit of speed, in getting changes up. Making changes in a
separate branch allows people to work independently.




